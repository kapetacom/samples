kind: kapeta/block-type-frontend:1.3.4
metadata:
  name: kapeta/sample-rabbitmq-consumer-react
  visibility: private
  title: RabbitMQ Consumer
spec:
  entities:
    types:
      - type: dto
        name: Event
        properties:
          type:
            type: string
            secret: false
            required: true
            global: false
          payload:
            type: string
            secret: false
            required: true
            global: false
    source:
      type: kaplang
      version: 1.11.2
      value: |-
        type Event {
        	type: string
        	payload: string
        }
  providers: []
  consumers:
    - kind: kapeta/resource-type-rest-client:1.0.14
      metadata:
        name: nodeEvents
      spec:
        port:
          name: rest
          type: rest
        methods:
          getAll:
            responseType:
              ref: Event[]
            method: GET
            path: /events
            arguments: {}
        source:
          type: kapeta-dsl
          value: |-
            @GET("/events")
            getAll():Event[]
    - kind: kapeta/resource-type-rest-client:1.0.14
      metadata:
        name: javaEvents
      spec:
        port:
          name: rest
          type: rest
        methods:
          getAll:
            responseType:
              ref: Event[]
            method: GET
            path: /events
            arguments: {}
        source:
          type: kapeta-dsl
          value: |-
            @GET("/events")
            getAll():Event[]
    - kind: kapeta/resource-type-rest-client:1.0.14
      metadata:
        name: goEvents
      spec:
        port:
          name: rest
          type: rest
        methods:
          getAll:
            responseType:
              ref: Event[]
            method: GET
            path: /events
            arguments: {}
        source:
          type: kapeta-dsl
          value: |-
            @GET("/events")
            getAll():Event[]
  target:
    kind: kapeta/language-target-react-ts:2.2.10
