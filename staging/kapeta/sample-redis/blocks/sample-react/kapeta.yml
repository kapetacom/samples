kind: kapeta/block-type-frontend:0.0.2
metadata:
  name: kapeta/sample-react
  visibility: public
  title: Redis React
  description: Shows using Redis in React frontends
spec:
  entities:
    types: []
    source:
      type: kaplang
      version: 1.11.2
      value: ""
  providers:
    - kind: kapeta/resource-type-web-page:0.0.12
      metadata:
        name: main
      spec:
        port:
          name: http
          type: web
        path: /
  consumers:
    - kind: kapeta/resource-type-redis:0.0.1
      metadata:
        name: redis
      spec:
        port:
          type: redis
    - kind: kapeta/resource-type-rest-client:0.1.4
      metadata:
        name: Java
      spec:
        port:
          name: rest
          type: rest
        methods:
          KeyValue::delete:
            responseType:
              type: void
            method: DELETE
            path: /kv/{key}
            arguments:
              key:
                type: string
                transport: PATH
                argument: key
                optional: false
            controllerName: KeyValue
          KeyValue::create:
            responseType:
              type: void
            method: POST
            path: /kv/{key}
            arguments:
              key:
                type: string
                transport: PATH
                argument: key
                optional: false
              value:
                type: string
                transport: BODY
                argument: value
                optional: false
            controllerName: KeyValue
          KeyValue::get:
            responseType:
              type: string
            method: GET
            path: /kv/{key}
            arguments:
              key:
                type: string
                transport: PATH
                argument: key
                optional: false
            controllerName: KeyValue
        source:
          type: kapeta-dsl
          value: |-
            controller KeyValue('/kv') {
                @GET('/{key}')
                get( @Path key:string ):string

                @POST('/{key}')
                create( @Path key:string, @Body value:string ):void

                @DELETE('/{key}')
                delete( @Path key:string ):void
            }
    - kind: kapeta/resource-type-rest-client:0.1.4
      metadata:
        name: Node
      spec:
        port:
          name: rest
          type: rest
        methods:
          KeyValue::delete:
            responseType:
              type: void
            method: DELETE
            path: /kv/{key}
            arguments:
              key:
                type: string
                transport: PATH
                argument: key
                optional: false
            controllerName: KeyValue
          KeyValue::create:
            responseType:
              type: void
            method: POST
            path: /kv/{key}
            arguments:
              key:
                type: string
                transport: PATH
                argument: key
                optional: false
              value:
                type: string
                transport: BODY
                argument: value
                optional: false
            controllerName: KeyValue
          KeyValue::get:
            responseType:
              type: string
            method: GET
            path: /kv/{key}
            arguments:
              key:
                type: string
                transport: PATH
                argument: key
                optional: false
            controllerName: KeyValue
        source:
          type: kapeta-dsl
          value: |-
            controller KeyValue('/kv') {
                @GET('/{key}')
                get( @Path key:string ):string

                @POST('/{key}')
                create( @Path key:string, @Body value:string ):void

                @DELETE('/{key}')
                delete( @Path key:string ):void
            }
  target:
    kind: kapeta/language-target-react-ts:2.2.10
